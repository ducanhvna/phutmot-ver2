version: '3.8'
services:
  # Removed nginx service - use native nginx instead
  
  db:
    image: postgres:17
    user: root
    environment:
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=odoo18@2024
      - POSTGRES_DB=postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Remove port exposure for security
    expose:
      - "5432"
    networks:
      - backend
  goldsun-app:
    container_name: goldsun_app
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.web
    depends_on:
      - odoo18
      - db
      - minio
    networks:
      - backend
    # Expose for native nginx (localhost only - production security)
    ports:
      - "127.0.0.1:5005:5005"
    env_file:
      - .env
  odoo18:
    image: odoo:18
    user: root
    depends_on:
      - db
    # Expose for native nginx (localhost only - production security)
    ports:
      - "127.0.0.1:8070:8070"
      - "127.0.0.1:8074:8074"
    tty: true
    command: --
    environment:
      - HOST=db
      - USER=odoo
      - PASSWORD=odoo18@2024
      - PIP_BREAK_SYSTEM_PACKAGES=1
    volumes:
      - ./entrypoint.sh:/entrypoint.sh
      - ./addons:/mnt/extra-addons
      - ./etc:/etc/odoo
    restart: always
    networks:
      - backend

  # fastapi:
  #   build: .
  #   ports:
  #     - "8979:8000"
  #   restart: always
  #   depends_on:
  #     - odoo18
  #     - db
  #     - minio
  #   entrypoint: ["/bin/sh", "/app/entrypoint.web.sh"]
  #   command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]
  #   networks:
  #     - backend
  #   env_file:
  #     - .env
  #   volumes:
  #     - ./alembic/versions:/app/alembic/versions
  #     - ./entrypoint.web.sh:/app/entrypoint.web.sh

  minio:
    image: minio/minio:latest
    container_name: minio
    # Remove port exposure for production
    expose:
      - "9000"
      - "9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - ./minio_data:/data
      - ./minio-init.sh:/minio-init.sh
    entrypoint: sh /minio-init.sh
    networks:
      - backend
    restart: always

  # celeryworker:
  #   build: .
  #   entrypoint: ["/bin/sh", "/app/entrypoint.web.sh"]
  #   command: ["celery", "-A", "app.utils.etl_scheduler", "worker", "--loglevel=info"]
  #   depends_on:
  #     - db
  #     - fastapi
  #     - redis
  #   env_file:
  #     - .env
  #   networks:
  #     - backend
  #   volumes:
  #     - ./entrypoint.web.sh:/app/entrypoint.web.sh

  # celerybeat:
  #   build: .
  #   entrypoint: ["/bin/sh", "/app/entrypoint.web.sh"]
  #   command: ["celery", "-A", "app.utils.etl_scheduler", "beat", "--loglevel=info"]
  #   depends_on:
  #     - db
  #     - fastapi
  #     - redis
  #   env_file:
  #     - .env
  #   networks:
  #     - backend
  #   volumes:
  #     - ./entrypoint.web.sh:/app/entrypoint.web.sh

  redis:
    image: redis:7
    restart: always
    # Remove port exposure for production
    expose:
      - "6379"
    networks:
      - backend

volumes:
  postgres_data:
  minio_data:

networks:
  backend:
    driver: bridge
