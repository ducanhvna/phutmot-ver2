version: '3.8'

services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn hello_django.asgi:application --bind 0.0.0.0:8000 -k uvicorn.workers.UvicornWorker
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - dbweb
      - redis
      - celery
    networks:
      - backend
      - backdjango

  dbweb:
    image: postgres:16
    user: root
    volumes:
      - ./postgre_dj_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
    networks:
      - backdjango

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - 8072:80
    depends_on:
      - web
    networks:
      - backend

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    networks:
      - backend

  celery:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: celery -A your_project worker --loglevel=info
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    env_file:
      - ./.env.prod
    depends_on:
      - redis
    networks:
      - backend
      - backdjango

  celery-beat:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: celery -A your_project beat --loglevel=info
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    env_file:
      - ./.env.prod
    depends_on:
      - web
      - redis
    networks:
      - backend
      - backdjango

  db:
    image: postgres:16
    user: root
    environment:
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=odoo17@2023
      - POSTGRES_DB=postgres
    restart: always
    volumes:
      - ./postgresql:/var/lib/postgresql/data
    networks:
      - backend
      - backodoo

  odoo17:
    image: odoo:17
    user: root
    depends_on:
      - db
    ports:
      - "10017:8069"
      - "20017:8072"  # live chat
    tty: true
    command: --
    environment:
      - HOST=db
      - USER=odoo
      - PASSWORD=odoo17@2023
    volumes:
      #- /etc/timezone:/etc/timezone:ro
      #- /etc/localtime:/etc/localtime:ro
      # - ./entrypoint.sh:/entrypoint.sh  # if you want to install additional Python packages, uncomment this line!
      - ./addons:/mnt/extra-addons
      - ./etc:/etc/odoo
    restart: always
    networks:
      - backend
      - backodoo

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  backend:
    driver: bridge
  backodoo:
    name: backodoo
    internal: true
  backdjango:
    name: backdjango
    internal: true
